// script.js
// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
if (typeof checkAuth === 'function' && checkAuth()) {
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –∏–≥—Ä—É
    window.location.href = '/game/game.html';
}

document.addEventListener('DOMContentLoaded', function () {
    const loginBtn = document.getElementById('loginBtn');
    const authModal = document.getElementById('authModal');
    const closeModal = document.querySelector('.close-modal');

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    loginBtn.addEventListener('click', openAuthModal);

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    closeModal.addEventListener('click', closeAuthModal);
    authModal.addEventListener('click', (e) => {
        if (e.target === authModal) closeAuthModal();
    });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Widget
    initTelegramWidget();

    function openAuthModal() {
        authModal.classList.remove('hidden');
    }

    function closeAuthModal() {
        authModal.classList.add('hidden');
    }

    function initTelegramWidget() {
        const container = document.getElementById('telegram-login-container');
        if (!container) return;

        // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        container.innerHTML = '';

        const script = document.createElement('script');
        script.src = 'https://telegram.org/js/telegram-widget.js?22';
        script.setAttribute('data-telegram-login', 'code_weaver_gamebot'); // –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∏–º—è –±–æ—Ç–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ
        script.setAttribute('data-size', 'large');
        script.setAttribute('data-auth-url', 'https://elisveden.github.io/auth/telegram-callback.html'); // –ü–æ–ª–Ω—ã–π URL
        script.setAttribute('data-request-access', 'write');
        script.async = true;

        container.appendChild(script);

        console.log('Telegram Widget –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è –±–æ—Ç–∞: code_weaver_gamebot');
    }

    // –í script.js –æ–±–Ω–æ–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é handleTelegramAuth
    window.handleTelegramAuth = function (userData) {
        console.log('Telegram user authenticated:', userData);

        const user = {
            id: userData.id,
            firstName: userData.first_name,
            lastName: userData.last_name || '',
            username: userData.username,
            authDate: userData.auth_date,
            hash: userData.hash,
            registeredAt: new Date().toISOString()
        };

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
        saveUserToStorage(user);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±–æ—Ç—É (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        notifyBotAboutLogin(user);

        showWelcomeMessage(user.firstName);
        closeAuthModal();
    };

    function notifyBotAboutLogin(user) {
        // –ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–∞—à —Å–µ—Ä–≤–µ—Ä —á—Ç–æ–±—ã –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏–ª –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª—Å—è:', user);
        // –í –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –∫ –≤–∞—à–µ–º—É API
    }

    function registerUserInFirebase(user) {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä/–±–æ—Ç
        fetch('https://api.telegram.org/bot<YOUR_BOT_TOKEN>/sendMessage', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: user.id, // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                text: `üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –†—É–Ω–Ω—ã–π –°–ª–µ–¥–æ–ø—ã—Ç, ${user.firstName}!\n\n–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω. –ù–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É!`,
                parse_mode: 'HTML'
            })
        })
            .then(response => response.json())
            .then(data => {
                console.log('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', data);
                // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Firebase
                saveUserToFirebase(user);
            })
            .catch(error => {
                console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
                // –í—Å–µ —Ä–∞–≤–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∏–≥—Ä—É
                saveUserToFirebase(user);
            });
    }

    function saveUserToFirebase(user) {
        // –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ localStorage
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ –≤–∞—à–µ–º—É —Å–µ—Ä–≤–µ—Ä—É
        const users = JSON.parse(localStorage.getItem('gameUsers') || '{}');
        users[user.id] = {
            ...user,
            registeredAt: new Date().toISOString(),
            lastLogin: new Date().toISOString(),
            progress: {
                level: 1,
                completedPuzzles: [],
                timePatience: 100
            }
        };
        localStorage.setItem('gameUsers', JSON.stringify(users));
        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', user);
    }

    function startGame() {
        console.log('–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!');
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ –∫ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–≥—Ä–µ
         window.location.href = '/game.html';
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è/—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è
function toggleCollapse(id, forceOpen = false) {
    const content = document.getElementById(id);
    const header = content.previousElementSibling;
    const icon = header.querySelector('i');

    if (forceOpen || !content.classList.contains('open')) {
        content.classList.add('open');
        header.classList.add('active');
        icon.style.transform = 'rotate(180deg)';
    } else {
        content.classList.remove('open');
        header.classList.remove('active');
        icon.style.transform = 'rotate(0deg)';
    }
}

/* // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∂–∞–Ω—Ä—ã –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function () {
    setTimeout(() => {
        toggleCollapse('genres', true);
        toggleCollapse('requirements', true);
    }, 1000);
}); */